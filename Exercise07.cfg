<setup>
   loglevel = 0
   logfile = processes.log
   interval = 60
   samples = 5
   sample_all = 1
   retry_discover_limit = 1
   get_command_line = yes
   use_perf = yes
   logsize = 100
</setup>
<IpcCounters>
   <ProcessesCount>
      name = Number of Processes
      publish_qos = no
      <alarm>
         publish_alarm = no
         threshold_value = 
      </alarm>
   </ProcessesCount>
   <SemaphoreSets>
      name = Number of Semaphore Sets
      publish_qos = no
      <alarm>
         publish_alarm = no
         threshold_value = 
      </alarm>
   </SemaphoreSets>
</IpcCounters>
<messages>
   <MsgProcessUp>
      text = $watcher: Process $process is running with process id = $pid.
      level = information
      token = process_up
      default = yes
      i18n_token = as#system.processes.proc_running_with_procid
   </MsgProcessUp>
   <MsgProcessDown>
      text = $watcher: Process $process is not running
      level = critical
      token = process_down
      default = yes
      i18n_token = as#system.processes.proc_procid_not_running
   </MsgProcessDown>
   <MsgProcessRestart>
      text = $watcher: Process $process [$index] has restarted with new pid = $pid. Old pid was = $oldpid.
      level = information
      token = process_restart
      default = yes
      i18n_token = as#system.processes.proc_started_with_newpid_old_was_pid
   </MsgProcessRestart>
   <MsgProcessInstances>
      text = $watcher: Wrong number of instances of process $process, expected $instances_expect - found $instances_found
      level = major
      token = process_instances
      default = yes
      i18n_token = as#system.processes.wrng_proc_inses_expected_inses
   </MsgProcessInstances>
   <MsgWindowExists>
      text = $watcher: Window $window_name:$window_class exists
      level = information
      token = window_exists
      default = yes
      i18n_token = as#system.processes.wnd_wndcls_exist
   </MsgWindowExists>
   <MsgWindowMissing>
      text = $watcher: Unable to find window $window_name:$window_class
      level = warning
      token = window_missing
      default = yes
      i18n_token = as#system.processes.unable_to_find_wind
   </MsgWindowMissing>
   <MsgWindowContent>
      text = $watcher: Window $window_name contains the following: $window_text
      level = warning
      token = window_content
      default = yes
      i18n_token = as#system.processes.wnd_wndname_contains_wndtext
   </MsgWindowContent>
   <MsgRestartMessage>
      text = $watcher: Restarting process $process
      level = warning
      token = restart_message
      default = yes
      i18n_token = as#system.processes.restarting_proc_procid
   </MsgRestartMessage>
   <MsgStartMessage>
      text = $watcher: Starting process $process
      level = warning
      token = start_message
      default = yes
      i18n_token = as#system.processes.starting_proc
   </MsgStartMessage>
   <MsgStopMessage>
      text = $watcher: Stopping process $process, PID = $pid
      level = warning
      token = stop_message
      default = yes
      i18n_token = as#system.processes.stopping_proc_procid
   </MsgStopMessage>
   <MsgStartError>
      text = $watcher: Unable to start process $process with command $command. $errmsg
      level = major
      token = start_error
      default = yes
      i18n_token = as#system.processes.unabl_to_start_proc_with_cmd
   </MsgStartError>
   <MsgStopError>
      text = $watcher: Unable to stop process $process, PID = $pid. $errmsg
      level = major
      token = stop_error
      default = yes
      i18n_token = as#system.processes.unable_to_stop_proc_procid
   </MsgStopError>
   <MsgCpuUsage>
      text = $watcher: Process $executable with cpu usage $cpu_average% exceeds $expected_cpu_usage%
      level = warning
      token = cpu_usage_exceeded
      default = yes
      i18n_token = as#system.processes.proc_exceeds_expected_cpu_usage
   </MsgCpuUsage>
   <MsgCpuUsageMin>
      text = $watcher: Process $executable with cpu usage $cpu_average% which is below threshold $expected_cpu_usage%
      level = warning
      token = cpu_usage_below
      default = yes
      i18n_token = as#system.processes.proc_cpuusage_below_expec_cpuusage
   </MsgCpuUsageMin>
   <MsgCpuUsageRange>
      text = $watcher: Process $executable with cpu usage $cpu_average% which is outside range $expected_cpu_usage%
      level = warning
      token = cpu_usage_range
      default = yes
      i18n_token = as#system.processes.proc_cpuusage_outofrange
   </MsgCpuUsageRange>
   <MsgProcSize>
      text = $watcher: Process $process $which ($expected_size Kb) memory usage: $size Kb
      level = warning
      token = size_exceeded
      default = yes
      i18n_token = as#system.processes.proc_memusage
   </MsgProcSize>
   <MsgUser>
      text = $watcher: Process $process not running as $expected_user but as $user
      level = warning
      token = unexpected_user
      default = yes
      i18n_token = as#system.processes.proc_not_running_with_expec_usr
   </MsgUser>
   <MsgThreadCount>
      text = Processes: $watcher: Process $process contains $threads threads, expected $op $thread_limit
      level = warning
      token = thread_count
      default = yes
      i18n_token = as#system.processes.proc_threads
   </MsgThreadCount>
   <MaxRestarts>
      text = $watcher: Process $process not started, max starts $max_restarts reached
      level = major
      token = max_restarts
      default = yes
      i18n_token = as#system.processes.proce_not_started
   </MaxRestarts>
   <MsgClear>
      text = $watcher: Clear
      level = clear
      token = clear
      default = yes
      i18n_token = as#system.processes.watcher_clear
   </MsgClear>
   <MsgHandleError>
      text = $watcher: Process $process contains $handles handles, expected $op $handle_limit
      level = critical
      token = handle_count_error
      default = yes
      i18n_token = as#system.processes.proc_handle_error
   </MsgHandleError>
   <MsgHandleWarning>
      text = $watcher: Process $process contains $handles handles, expected $op $handle_limit
      level = major
      token = handle_count_warning
      default = yes
      i18n_token = as#system.processes.proc_handle_warning
   </MsgHandleWarning>
   <MsgProcessesCount>
      text = Current number of Processes Count is $value, which is above the error threshold ($value_limit)
      level = major
      token = process_count
      default = yes
      i18n_token = as#system.ipc.process_count
   </MsgProcessesCount>
   <MsgSemaphoreSets>
      text = Current number of Semaphore Sets is $value, which is above the error threshold ($value_limit)
      level = major
      token = semaphore_sets
      default = yes
      i18n_token = as#system.ipc.semaphore_sets_count
   </MsgSemaphoreSets>
   <MsgProcessesCountClear>
      text = Clear : Current number of Processes Count is $value
      level = clear
      token = process_count_clear
      default = yes
      i18n_token = as#system.ipc.process_count_clear
   </MsgProcessesCountClear>
   <MsgSemaphoreSetsCountClear>
      text = Clear : Current number of Semaphore Sets Count is $value
      level = clear
      token = semaphore_sets_clear
      default = yes
      i18n_token = as#system.ipc.semaphore_sets_count_clear
   </MsgSemaphoreSetsCountClear>
</messages>
